{"remainingRequest":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/crmnote/node_modules/thread-loader/dist/cjs.js!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/crmnote/node_modules/babel-loader/lib/index.js!/Users/qiushunqun/Desktop/yanMieeMie/GitHub/crmnote/node_modules/vuetify/lib/components/VWindow/VWindow.js","dependencies":[{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/crmnote/node_modules/vuetify/lib/components/VWindow/VWindow.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/crmnote/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/crmnote/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/qiushunqun/Desktop/yanMieeMie/GitHub/crmnote/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}